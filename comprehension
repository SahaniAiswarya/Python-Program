#step by step i/p of list comprehension
nums=[int(input(f"enter number {i+1}:")) for i in range(5)]
print(nums)



n=[int(x) for x in input("enter 5 nums with space").split()[:5]]
print(n)

  

#nest list comprehension loop within loop in a single list comprehension
n=int(input("enter a table size:"))
table=[[i*j for j in range(1,n+1)] for i in range(1,n+1)]
print("tables of math")
for row in table:
    print(row)



#n x n matrix
nums=input("enter 9 number with spaces").split()
if len(nums)!=9:
    print("enter exactly 9 numbers:")
else:
    numbers=[int(x) for x in nums]
    matrix=[[numbers[i*3+j] for j in range(3)] for i in range(3)]
for r in matrix:
    print(r)


      
#Transpose matrix
nums=input("enter 9 number with spaces").split()
if len(nums)!=9:
    print("enter exactly 9 numbers:")
else:
    numbers=[int(x) for x in nums]
    matrix=[[numbers[i*3+j] for j in range(3)] for i in range(3)]
transpose=[[matrix[i][j] for i in range(3)] for j in range(3)]
for r in matrix:
    print(r)



#flatten n x n array
n=int(input("enter number size"))
num=[int(x) for x in input("enter numbers:").split()[:n*n]]
matrix=[[num[i*n+j] for j in range(n)] for i in range(n)]
for k in matrix:
    print(k)
flat=[k for r in matrix for k in r]
print(flat)



#list cpmprehension to cal square
n=int(input("enter number size"))
nums=[int(x) for x in input(f"enter {n*n} numbers:").split()[:n*n]]
matrix=[[nums[i*n+j]**2 for j in range(n)] for i in range(n)]
for k in matrix:
    print(k)



n=int(input("enter number size"))
nums=[int(x) for x in input(f"enter {n*n} numbers:").split()[:n*n]]
matrix=[[nums[i*n+1]if nums[i*n+j]%2==0 else 0 for j in range(n)] for i in range(n)]
for k in matrix:
    print(k)

